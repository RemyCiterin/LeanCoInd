{"log":
 [{"message":
   ".> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/build/lib:/home/remy/.elan/toolchains/leanprover--lean4---v4.11.0-rc1/lib/lean:/home/remy/.elan/toolchains/leanprover--lean4---v4.11.0-rc1/lib /home/remy/.elan/toolchains/leanprover--lean4---v4.11.0-rc1/bin/lean ././././CoInd/Kahn2.lean -R ./././. -o ././.lake/build/lib/CoInd/Kahn2.olean -i ././.lake/build/lib/CoInd/Kahn2.ilean -c ././.lake/build/ir/CoInd/Kahn2.c --json",
   "level": "trace"},
  {"message":
   "././././CoInd/Kahn2.lean:27:0: structure Container.{u₁} : Type (u₁ + 1)\nnumber of parameters: 0\nconstructor:\nContainer.mk : (A : Type u₁) → (A → Type u₁) → Container\nfields:\nA : Type u₁\nB : self.A → Type u₁",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:28:0: @[reducible] def Container.Obj.{u₁, u₃} : Container → Type u₃ → Type (max u₁ u₃) :=\nfun C α => (X : C.A) ×' (C.B X → α)",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:49:0: def Kahn.C.{u} : Type u → Container :=\nfun α => { A := Kahn.A α, B := Kahn.B }",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:50:0: inductive Kahn.A.{u} : Type u → Type u\nnumber of parameters: 1\nconstructors:\nKahn.A.cons : {α : Type u} → α → Kahn.A α\nKahn.A.bot : {α : Type u} → Kahn.A α",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:51:0: inductive Kahn.F.{u, v} : Type u → Type v → Type (max u v)\nnumber of parameters: 2\nconstructors:\nKahn.F.cons : {α : Type u} → {β : Type v} → α → β → Kahn.F α β\nKahn.F.bot : {α : Type u} → {β : Type v} → Kahn.F α β",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:53:0: Container.Obj.{u₁, u₃} (C : Container) (α : Type u₃) : Type (max u₁ u₃)",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:307:0: pgfp.accumulate.{u} {L : Type u} [CompleteLattice L] (f : L →o L) (p q : L) : q ≤ (pgfp f) p ↔ q ≤ (pgfp f) (p ⊔ q)",
   "level": "info"},
  {"message":
   "././././CoInd/Kahn2.lean:308:0: pgfp.coinduction.{u} {L : Type u} [CompleteLattice L] (f : L →o L) (p : L) : p ≤ (pgfp f) ⊥ ↔ p ≤ f (p ⊔ (pgfp f) p)",
   "level": "info"}],
 "depHash": "18064644313337246355"}